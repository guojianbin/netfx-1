<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".g.cs" #>


using System;
using System.Collections.Generic;
using System.Linq;

namespace LianZhao.Linq
{
    public static partial class Enumerable
    {
        <#
    foreach (var t4GenericType in T4GenericTypes)
    {#>
        public static Tuple<<#= t4GenericType#>, <#= t4GenericType#>> MinAndMax(this IEnumerable<<#= t4GenericType#>> source)
        {
            if (!source.Any())
            {
                throw new ArgumentException("Sequence contains no elements", "source");
            }

            var min = source.First();
            var max = min;
            foreach (var item in source)
            {
                if (item < min)
                {
                    min = item;
                }
                else if (item > max)
                {
                    max = item;
                }
                else
                {
                    // do nothing
                }
            }

            return Tuple.Create(min, max);
        }
    <#}
    #>

    }
}
    
<#+
    private string[] T4GenericTypes = {"int", "long", "float", "double", "decimal"};
#>