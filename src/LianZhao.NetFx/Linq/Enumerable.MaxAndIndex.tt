<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".g.cs" #>


using System;
using System.Collections.Generic;
using System.Linq;

namespace LianZhao.Linq
{
    public static partial class Enumerable
    {
        <#
    foreach (var t4GenericType in T4GenericTypes)
    {#>
        public static Tuple<<#= t4GenericType#>, int> MaxAndIndex(this IEnumerable<<#= t4GenericType#>> source)
        {
            return
                source.Select((value, index) => Tuple.Create(value, index))
                    .Aggregate((a, b) => (a.Item1 > b.Item1) ? a : b);
        }
    <#}
    #>

    }
}
    
<#+
    private string[] T4GenericTypes = {"int", "long", "float", "double", "decimal"};
#>